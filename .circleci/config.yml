# Author: @mvxt
##########################
# Common Definitions
##########################
# Simple YAML anchors
aliases:
  - &project_dir "~/project"

##########################
# Workflow Definitions
##########################
workflows:
  version: 2
  build-deploy:
    jobs:
      - test
      - test-parallel:
          requires:
            - test
      - approve:
          type: approval
          requires:
            - test-parallel 
            - parameterized-command 
          filters:
            branches:
              only: master
      - build-and-push-dockerhub:
          context: demo-prod
          requires:
            - approve
          filters:
            branches:
              only: master
      - build-and-push-ecr:
          context: demo-prod
          requires:
            - approve
          filters:
            branches:
              only: master
      - deploy:
          context: demo-prod
          requires:
            - build-and-push-dockerhub
            - build-and-push-ecr
          filters:
            branches:
              only: master

  nightly:
    jobs:
      - test
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only: master

##########################
# Job Definitions
##########################
version: 2.0
jobs:
  test:
    docker:
      - image: circleci/node:10.15.1-browsers
    working_directory: *project_dir
    resource_class: medium
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install deps
          command: yarn
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Run TestCafe Tests 
          command: |
            yarn runTests
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: . 
      - store_artifacts:
          path: ./results.html
      - persist_to_workspace:
          root: .
          paths:
            - Dockerfile
            - etc
            - css
            - img
            - index.html
            - js
            - mail
            - scss

  test-parallel:
    docker:
      - image: circleci/node:10.15.1-browsers
    working_directory: *project_dir
    parallelism: 4
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install deps
          command: yarn
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Glob, Split, and Run TestCafe Tests 
          command: |
            TESTFILES=$(circleci tests glob test/* | circleci tests split --total=4)
            echo "Testing $TESTFILES on this container"
            yarn runTests -- ${TESTFILES}
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: . 
      - store_artifacts:
          path: ./results.html

  build-and-push-dockerhub:
    docker:
      - image: cimg/base:2020.01
    working_directory: *project_dir
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build the Docker image, tag it
          command: docker build -t ${DOCKER_TAG} -t ${DOCKER_TAG}:${CIRCLE_SHA1} .
      - run:
          name: Login to DockerHub and push
          command: |
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push ${DOCKER_TAG}
            docker push ${DOCKER_TAG}:${CIRCLE_SHA1}

  build-and-push-ecr:
    docker:
      - image: cimg/python:3.8-node
    working_directory: *project_dir
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install AWS CLI
          command: sudo pip3 install awscli --upgrade
      - run:
          name: Configure AWS Credentials and Login
          command: |
            aws configure set \ 
              aws_access_key_id $AWS_ACCESS_KEY_ID \
              aws_secret_access_key $AWS_SECRET_ACCESS_KEY \
              region $AWS_REGION \
              --profile default

            $(aws ecr get-login --no-include-email --profile default)
      - run:
          name: Build the Docker image, tag it
          command: docker build -t ${AWS_ECR_REPO_NAME} -t ${AWS_ECR_REPO_NAME}:${CIRCLE_SHA1} .
      - run:
          name: Push image(s) to ECR
          command: |
            # Latest
            docker push ${AWS_ECR_ACCOUNT_URL}/${AWS_ECR_REPO_NAME}
            # Specific SHA
            docker push ${AWS_ECR_ACCOUNT_URL}/${AWS_ECR_REPO_NAME}:${CIRCLE_SHA1}

  deploy:
    docker:
      - image: cimg/python:3.8-node
    working_directory: *project_dir
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install AWS CLI
          command: sudo pip3 install awscli --upgrade
      - run:
          name: Configure AWS Credentials
          command: |
            aws configure set \ 
              aws_access_key_id $AWS_ACCESS_KEY_ID \
              aws_secret_access_key $AWS_SECRET_ACCESS_KEY \
              region $AWS_REGION \
              --profile default
      - deploy:
          name: S3 Sync
          command: |
            aws s3 sync . "$AWS_S3_BUCKET_NAME"

